LOC	오브젝트 코드
0000	17202D
	0001 0110 0010 0000 0010 1101
	0001 01 : STL m ->  m이 있으니까 이 뒤에는 메모리 참조다. 즉 심볼 테이블에 이 자리 예약해라. 이 정보는 엑셀 보고 알아라.
	       10 : n = 1, i = 1 -> XE 버전의 simple addr이다. 
	          0010 : xbpe : pc만 1이니까 pc-relative다.
	               0000 0010 1101 : pc-relative니까 현재의 LOC에다가 이 명령어의 길이만큼 더하고(pc기준 다음 명령어), 
	                                다시 이 값 만큼 더하면 변수가 있을 자리의 LOC 값이다. 
	                                PC = 0000 + 0003 = 0003, m = 002D, PC + m = 0030 -> RETADR LOC 맞음








LOC	오브젝트 코드
0003	69202D
	0110 1001 0010 0000 0010 1101
	0110 10 : LDB m ->  m이 있으니까 이 뒤에는 메모리 참조다. 즉 심볼 테이블에 이 자리 예약해라. 이 정보는 엑셀 보고 알아라.
	       01 : n = 0, i = 1 -> Immediate Addressing. 뒤에 # 붙여줘야 한다. 
	          0010 : xbpe : pc만 1이니까 pc-relative다.
	               0000 0010 1101 : pc-relative니까 현재의 LOC에다가 이 명령어의 길이만큼 더하고(pc기준 다음 명령어), 
	                                다시 이 값 만큼 더하면 변수가 있을 자리의 LOC 값이다. 
	                                PC = 0003 + 0003 = 0006, m = 002D, PC + m = 0033 -> LENGTH LOC 맞음








LOC	오브젝트 코드
0006	4B101036
	0100 1011 0001 0000 0001 0000 0011 0110
	0100 10 : JSUB m ->  m이 있으니까 이 뒤에는 메모리 참조다. 즉 심볼 테이블에 이 자리 예약해라. 이 정보는 엑셀 보고 알아라.
	       11 : n = 1, i = 1 -> XE 버전의 simple addr이다. 
	          0001 : xbpe : direct + extended, +기호 붙여준다. 
	               0000 0001 0000 0011 0110 : direct니까 저 주소 그대로 찾아간다. extended니까 주소 길이도 늘어났다. 